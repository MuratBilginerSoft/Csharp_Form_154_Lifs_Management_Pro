#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Bu kod araç tarafından oluşturuldu.
//     Çalışma Zamanı Sürümü:4.0.30319.42000
//
//     Bu dosyada yapılacak değişiklikler yanlış davranışa neden olabilir ve
//     kod yeniden oluşturulursa kaybolur.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LIFS_Management_Pro_Beta_v._1._0._0._00_Databases
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LIFSACADEMY")]
	public partial class _01_LIFSAcademyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLIFSSUBJECT(LIFSSUBJECT instance);
    partial void UpdateLIFSSUBJECT(LIFSSUBJECT instance);
    partial void DeleteLIFSSUBJECT(LIFSSUBJECT instance);
    partial void InsertLIFSLOGIN(LIFSLOGIN instance);
    partial void UpdateLIFSLOGIN(LIFSLOGIN instance);
    partial void DeleteLIFSLOGIN(LIFSLOGIN instance);
    partial void InsertLIFSCONTENT(LIFSCONTENT instance);
    partial void UpdateLIFSCONTENT(LIFSCONTENT instance);
    partial void DeleteLIFSCONTENT(LIFSCONTENT instance);
    partial void InsertLIFSLOG(LIFSLOG instance);
    partial void UpdateLIFSLOG(LIFSLOG instance);
    partial void DeleteLIFSLOG(LIFSLOG instance);
    partial void InsertLIFSUSERSCORE(LIFSUSERSCORE instance);
    partial void UpdateLIFSUSERSCORE(LIFSUSERSCORE instance);
    partial void DeleteLIFSUSERSCORE(LIFSUSERSCORE instance);
    #endregion
		
		public _01_LIFSAcademyDataContext() : 
				base(global::LIFS_Management_Pro_Beta_v._1._0._0.Properties.Settings.Default.LIFSACADEMYConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public _01_LIFSAcademyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public _01_LIFSAcademyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public _01_LIFSAcademyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public _01_LIFSAcademyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LIFSSUBJECT> LIFSSUBJECT
		{
			get
			{
				return this.GetTable<LIFSSUBJECT>();
			}
		}
		
		public System.Data.Linq.Table<LIFSLOGIN> LIFSLOGIN
		{
			get
			{
				return this.GetTable<LIFSLOGIN>();
			}
		}
		
		public System.Data.Linq.Table<LIFSCONTENT> LIFSCONTENT
		{
			get
			{
				return this.GetTable<LIFSCONTENT>();
			}
		}
		
		public System.Data.Linq.Table<LIFSLOG> LIFSLOG
		{
			get
			{
				return this.GetTable<LIFSLOG>();
			}
		}
		
		public System.Data.Linq.Table<LIFSUSERSCORE> LIFSUSERSCORE
		{
			get
			{
				return this.GetTable<LIFSUSERSCORE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIFSSUBJECT")]
	public partial class LIFSSUBJECT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SUBJECTID;
		
		private string _SUBJECTNAME;
		
		private System.Nullable<int> _USERID;
		
		private System.Nullable<System.DateTime> _ADDDATE;
		
		private System.Nullable<int> _REVISION;
		
		private System.Nullable<int> _REVUSERID;
		
		private System.Nullable<System.DateTime> _REVDATE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSUBJECTIDChanging(int value);
    partial void OnSUBJECTIDChanged();
    partial void OnSUBJECTNAMEChanging(string value);
    partial void OnSUBJECTNAMEChanged();
    partial void OnUSERIDChanging(System.Nullable<int> value);
    partial void OnUSERIDChanged();
    partial void OnADDDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnADDDATEChanged();
    partial void OnREVISIONChanging(System.Nullable<int> value);
    partial void OnREVISIONChanged();
    partial void OnREVUSERIDChanging(System.Nullable<int> value);
    partial void OnREVUSERIDChanged();
    partial void OnREVDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnREVDATEChanged();
    #endregion
		
		public LIFSSUBJECT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SUBJECTID
		{
			get
			{
				return this._SUBJECTID;
			}
			set
			{
				if ((this._SUBJECTID != value))
				{
					this.OnSUBJECTIDChanging(value);
					this.SendPropertyChanging();
					this._SUBJECTID = value;
					this.SendPropertyChanged("SUBJECTID");
					this.OnSUBJECTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECTNAME", DbType="NVarChar(50)")]
		public string SUBJECTNAME
		{
			get
			{
				return this._SUBJECTNAME;
			}
			set
			{
				if ((this._SUBJECTNAME != value))
				{
					this.OnSUBJECTNAMEChanging(value);
					this.SendPropertyChanging();
					this._SUBJECTNAME = value;
					this.SendPropertyChanged("SUBJECTNAME");
					this.OnSUBJECTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="Int")]
		public System.Nullable<int> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ADDDATE
		{
			get
			{
				return this._ADDDATE;
			}
			set
			{
				if ((this._ADDDATE != value))
				{
					this.OnADDDATEChanging(value);
					this.SendPropertyChanging();
					this._ADDDATE = value;
					this.SendPropertyChanged("ADDDATE");
					this.OnADDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REVISION", DbType="Int")]
		public System.Nullable<int> REVISION
		{
			get
			{
				return this._REVISION;
			}
			set
			{
				if ((this._REVISION != value))
				{
					this.OnREVISIONChanging(value);
					this.SendPropertyChanging();
					this._REVISION = value;
					this.SendPropertyChanged("REVISION");
					this.OnREVISIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REVUSERID", DbType="Int")]
		public System.Nullable<int> REVUSERID
		{
			get
			{
				return this._REVUSERID;
			}
			set
			{
				if ((this._REVUSERID != value))
				{
					this.OnREVUSERIDChanging(value);
					this.SendPropertyChanging();
					this._REVUSERID = value;
					this.SendPropertyChanged("REVUSERID");
					this.OnREVUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REVDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> REVDATE
		{
			get
			{
				return this._REVDATE;
			}
			set
			{
				if ((this._REVDATE != value))
				{
					this.OnREVDATEChanging(value);
					this.SendPropertyChanging();
					this._REVDATE = value;
					this.SendPropertyChanged("REVDATE");
					this.OnREVDATEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIFSLOGIN")]
	public partial class LIFSLOGIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USERDID;
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private int _AUTHORITY;
		
		private string _PROFIL;
		
		private string _NAME;
		
		private string _LASTNAME;
		
		private System.Nullable<int> _ONLINESTATUS;
		
		private string _USERAKA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERDIDChanging(int value);
    partial void OnUSERDIDChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnAUTHORITYChanging(int value);
    partial void OnAUTHORITYChanged();
    partial void OnPROFILChanging(string value);
    partial void OnPROFILChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnLASTNAMEChanging(string value);
    partial void OnLASTNAMEChanged();
    partial void OnONLINESTATUSChanging(System.Nullable<int> value);
    partial void OnONLINESTATUSChanged();
    partial void OnUSERAKAChanging(string value);
    partial void OnUSERAKAChanged();
    #endregion
		
		public LIFSLOGIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERDID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int USERDID
		{
			get
			{
				return this._USERDID;
			}
			set
			{
				if ((this._USERDID != value))
				{
					this.OnUSERDIDChanging(value);
					this.SendPropertyChanging();
					this._USERDID = value;
					this.SendPropertyChanged("USERDID");
					this.OnUSERDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AUTHORITY", DbType="Int NOT NULL")]
		public int AUTHORITY
		{
			get
			{
				return this._AUTHORITY;
			}
			set
			{
				if ((this._AUTHORITY != value))
				{
					this.OnAUTHORITYChanging(value);
					this.SendPropertyChanging();
					this._AUTHORITY = value;
					this.SendPropertyChanged("AUTHORITY");
					this.OnAUTHORITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL", DbType="NVarChar(500)")]
		public string PROFIL
		{
			get
			{
				return this._PROFIL;
			}
			set
			{
				if ((this._PROFIL != value))
				{
					this.OnPROFILChanging(value);
					this.SendPropertyChanging();
					this._PROFIL = value;
					this.SendPropertyChanged("PROFIL");
					this.OnPROFILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LASTNAME", DbType="NVarChar(50)")]
		public string LASTNAME
		{
			get
			{
				return this._LASTNAME;
			}
			set
			{
				if ((this._LASTNAME != value))
				{
					this.OnLASTNAMEChanging(value);
					this.SendPropertyChanging();
					this._LASTNAME = value;
					this.SendPropertyChanged("LASTNAME");
					this.OnLASTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ONLINESTATUS", DbType="Int")]
		public System.Nullable<int> ONLINESTATUS
		{
			get
			{
				return this._ONLINESTATUS;
			}
			set
			{
				if ((this._ONLINESTATUS != value))
				{
					this.OnONLINESTATUSChanging(value);
					this.SendPropertyChanging();
					this._ONLINESTATUS = value;
					this.SendPropertyChanged("ONLINESTATUS");
					this.OnONLINESTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERAKA", DbType="NChar(2)")]
		public string USERAKA
		{
			get
			{
				return this._USERAKA;
			}
			set
			{
				if ((this._USERAKA != value))
				{
					this.OnUSERAKAChanging(value);
					this.SendPropertyChanging();
					this._USERAKA = value;
					this.SendPropertyChanged("USERAKA");
					this.OnUSERAKAChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIFSCONTENT")]
	public partial class LIFSCONTENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SUBJECT;
		
		private string _TITLE;
		
		private string _CONTETT;
		
		private int _USERID;
		
		private System.Nullable<System.DateTime> _ADDDATE;
		
		private System.Nullable<int> _REV;
		
		private System.Nullable<System.DateTime> _REVDATE;
		
		private System.Nullable<int> _QUALITYCONTROL;
		
		private System.Nullable<int> _REVUSERID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSUBJECTChanging(string value);
    partial void OnSUBJECTChanged();
    partial void OnTITLEChanging(string value);
    partial void OnTITLEChanged();
    partial void OnCONTETTChanging(string value);
    partial void OnCONTETTChanged();
    partial void OnUSERIDChanging(int value);
    partial void OnUSERIDChanged();
    partial void OnADDDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnADDDATEChanged();
    partial void OnREVChanging(System.Nullable<int> value);
    partial void OnREVChanged();
    partial void OnREVDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnREVDATEChanged();
    partial void OnQUALITYCONTROLChanging(System.Nullable<int> value);
    partial void OnQUALITYCONTROLChanged();
    partial void OnREVUSERIDChanging(System.Nullable<int> value);
    partial void OnREVUSERIDChanged();
    #endregion
		
		public LIFSCONTENT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBJECT", DbType="NVarChar(50)")]
		public string SUBJECT
		{
			get
			{
				return this._SUBJECT;
			}
			set
			{
				if ((this._SUBJECT != value))
				{
					this.OnSUBJECTChanging(value);
					this.SendPropertyChanging();
					this._SUBJECT = value;
					this.SendPropertyChanged("SUBJECT");
					this.OnSUBJECTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TITLE
		{
			get
			{
				return this._TITLE;
			}
			set
			{
				if ((this._TITLE != value))
				{
					this.OnTITLEChanging(value);
					this.SendPropertyChanging();
					this._TITLE = value;
					this.SendPropertyChanged("TITLE");
					this.OnTITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTETT", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string CONTETT
		{
			get
			{
				return this._CONTETT;
			}
			set
			{
				if ((this._CONTETT != value))
				{
					this.OnCONTETTChanging(value);
					this.SendPropertyChanging();
					this._CONTETT = value;
					this.SendPropertyChanged("CONTETT");
					this.OnCONTETTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="Int NOT NULL")]
		public int USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ADDDATE
		{
			get
			{
				return this._ADDDATE;
			}
			set
			{
				if ((this._ADDDATE != value))
				{
					this.OnADDDATEChanging(value);
					this.SendPropertyChanging();
					this._ADDDATE = value;
					this.SendPropertyChanged("ADDDATE");
					this.OnADDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REV", DbType="Int")]
		public System.Nullable<int> REV
		{
			get
			{
				return this._REV;
			}
			set
			{
				if ((this._REV != value))
				{
					this.OnREVChanging(value);
					this.SendPropertyChanging();
					this._REV = value;
					this.SendPropertyChanged("REV");
					this.OnREVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REVDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> REVDATE
		{
			get
			{
				return this._REVDATE;
			}
			set
			{
				if ((this._REVDATE != value))
				{
					this.OnREVDATEChanging(value);
					this.SendPropertyChanging();
					this._REVDATE = value;
					this.SendPropertyChanged("REVDATE");
					this.OnREVDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALITYCONTROL", DbType="Int")]
		public System.Nullable<int> QUALITYCONTROL
		{
			get
			{
				return this._QUALITYCONTROL;
			}
			set
			{
				if ((this._QUALITYCONTROL != value))
				{
					this.OnQUALITYCONTROLChanging(value);
					this.SendPropertyChanging();
					this._QUALITYCONTROL = value;
					this.SendPropertyChanged("QUALITYCONTROL");
					this.OnQUALITYCONTROLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REVUSERID", DbType="Int")]
		public System.Nullable<int> REVUSERID
		{
			get
			{
				return this._REVUSERID;
			}
			set
			{
				if ((this._REVUSERID != value))
				{
					this.OnREVUSERIDChanging(value);
					this.SendPropertyChanging();
					this._REVUSERID = value;
					this.SendPropertyChanged("REVUSERID");
					this.OnREVUSERIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIFSLOG")]
	public partial class LIFSLOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _USERID;
		
		private string _INFO;
		
		private System.Nullable<System.DateTime> _DATE;
		
		private string _USERAKA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUSERIDChanging(int value);
    partial void OnUSERIDChanged();
    partial void OnINFOChanging(string value);
    partial void OnINFOChanged();
    partial void OnDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEChanged();
    partial void OnUSERAKAChanging(string value);
    partial void OnUSERAKAChanged();
    #endregion
		
		public LIFSLOG()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="Int NOT NULL")]
		public int USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INFO", DbType="NVarChar(250)")]
		public string INFO
		{
			get
			{
				return this._INFO;
			}
			set
			{
				if ((this._INFO != value))
				{
					this.OnINFOChanging(value);
					this.SendPropertyChanging();
					this._INFO = value;
					this.SendPropertyChanged("INFO");
					this.OnINFOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERAKA", DbType="NVarChar(2)")]
		public string USERAKA
		{
			get
			{
				return this._USERAKA;
			}
			set
			{
				if ((this._USERAKA != value))
				{
					this.OnUSERAKAChanging(value);
					this.SendPropertyChanging();
					this._USERAKA = value;
					this.SendPropertyChanged("USERAKA");
					this.OnUSERAKAChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIFSUSERSCORE")]
	public partial class LIFSUSERSCORE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USERID;
		
		private string _NAME;
		
		private string _LASTNAME;
		
		private System.Nullable<int> _TOTALSCORE;
		
		private System.Nullable<int> _TERMSCORE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERIDChanging(int value);
    partial void OnUSERIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnLASTNAMEChanging(string value);
    partial void OnLASTNAMEChanged();
    partial void OnTOTALSCOREChanging(System.Nullable<int> value);
    partial void OnTOTALSCOREChanged();
    partial void OnTERMSCOREChanging(System.Nullable<int> value);
    partial void OnTERMSCOREChanged();
    #endregion
		
		public LIFSUSERSCORE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LASTNAME", DbType="NVarChar(50)")]
		public string LASTNAME
		{
			get
			{
				return this._LASTNAME;
			}
			set
			{
				if ((this._LASTNAME != value))
				{
					this.OnLASTNAMEChanging(value);
					this.SendPropertyChanging();
					this._LASTNAME = value;
					this.SendPropertyChanged("LASTNAME");
					this.OnLASTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTALSCORE", DbType="Int")]
		public System.Nullable<int> TOTALSCORE
		{
			get
			{
				return this._TOTALSCORE;
			}
			set
			{
				if ((this._TOTALSCORE != value))
				{
					this.OnTOTALSCOREChanging(value);
					this.SendPropertyChanging();
					this._TOTALSCORE = value;
					this.SendPropertyChanged("TOTALSCORE");
					this.OnTOTALSCOREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERMSCORE", DbType="Int")]
		public System.Nullable<int> TERMSCORE
		{
			get
			{
				return this._TERMSCORE;
			}
			set
			{
				if ((this._TERMSCORE != value))
				{
					this.OnTERMSCOREChanging(value);
					this.SendPropertyChanging();
					this._TERMSCORE = value;
					this.SendPropertyChanged("TERMSCORE");
					this.OnTERMSCOREChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
